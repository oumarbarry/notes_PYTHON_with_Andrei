AUTOMATION / TESTING:
	Testing/Automation:
		it's all about that through programming, we can interact with things like a browser or an app
			and mimic human actions to make sure that the application works as expected
			
	Selenium: one of the best tools for browser testing automation but also any other screen/app
		selenium-python.readthedocs.io:
			pip install selenium
			also install stable driver of all/specific browser(s) 
				and put the driver globally in /user/local/bin for unix
					or put it locally in the same directory of the automation file
			also ensure that the installed driver is compatible with the version of Chrome 
				(same version number)
			
		seleniumeasy.com/test/
		
		example1.py:
			from selenium import webdriver

			firefox = webdriver.Firefox(excecutable_path="Path to the Firefox driver")
			chrome = webdriver.Chrome('./chromedriver')
			chrome.maximize_window()
			#chrome # as we run this script, it will open up a new instance/window of the browser
							
	Selenium Basics:
		an easier way to check our code than just running print all the time is to use the assert keyword
		if we assert something, if this thing returns false,
			assert will error out (an Assertion Error) and exit us out of the code
		
		allselenium.info: Python Selenium Commands Cheat Sheet
		
		example2.py:
			from selenium import webdriver

			chrome = webdriver.Chrome('./chromedriver')
			chrome.maximize_window()
			chrome.get('https://www.seleniumeasy.com/test/basic-first-form-demo.html')
			
			assert 'Selenium Easy Demo' in chrome.title
			
			btn = chrome.find_element_by_class_name('btn-default')
			print( btn.get_attribute('innerHTML') ) #== print( btn.text )
			
			assert 'Show Message' in chrome.page_source
			
			usr_msg = chrome.find_element_by_id('user-message')
			usr_msg.clear()
			usr_msg.send_keys('I AM EXTRA COOOL')
			
			btn.click()
			output_msg = chrome.find_element_by_id('display') # chrome.find_element_by_css_selector('#display')
			
			assert 'I AM EXTRA COOOL' in output_msg.text
			
			chrome.close() #to close the current open instance of chrome
			chrome.close() #sometimes, due to selenium bug/ versions bug, you may have to run it twice
			
			chrome.quit() #to close all instance declared, open by this file
			chrome.quit()
			
		
		
		mind that there's many good and many bad ways to use automation
		
		most websites will detect when it's a bot (a selenium python script like)
			they detect bot, because machines actions is sooooooo fast than human actions
				so to hide that it's a robot actions, we can use in the script:
					time.sleep() between actions to temporized them,
					or selenium Waiters (read the docs for more)